{
    "contents" : "# Animate GEOtop maps\n\n# need to install ImageMagick from http://www.imagemagick.org/\n# LINUX CentOS UHREL Ubuntu see here: http://tecadmin.net/install-imagemagick-on-linux/\n\n# use IrfanView to display .gif image\n# press G to pause animation\n\n# TEST\n\n# library(geotopbricks)\n# library(ggplot2)\n# # # \n# wpath <- \"Y:/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/Mazia/Discharge/WG1_005/\"\n# mapkey <- \"SoilLiqContentTensorFile\"\n# mapkey <- \"SWEMapFile\"\n# wpath <- \"/data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/Mazia/Discharge/WG1_005/\"\n# \n# layers=NULL\n# soil_files=F\n# variable=\"SWE\"\n# limits=c(0,300)\n# legend=\"mm\"\n# lowcol=\"#f7fbff\"\n# highcol=\"#08306b\"\n\nGEOtop_animateMAPS <- function(wpath, mapkey, layers, soil_files,\n                               variable, limits, legend, \n                               lowcol=\"#f7fbff\", highcol=\"#08306b\",\n                               delay_value=NULL)\n{\n  # set animation options, convert executable\n  #oopt <- ani.options(convert = \"convert\")\n  \n  # extract start and end of simulation\n  start <- get.geotop.inpts.keyword.value(\"InitDateDDMMYYYYhhmm\",date=TRUE,wpath=wpath,\n                                          tz=\"UTC\") + 24*60*60\n  start <- as.Date(start)\n  end <- get.geotop.inpts.keyword.value(\"EndDateDDMMYYYYhhmm\",date=TRUE,wpath=wpath,tz=\"UTC\")\n  end <- as.Date(end)\n  \n  dates <- seq(from = start, to = end, by = 1)\n  \n  # number of layers\n  # soil saturation and layer thickness from soil input \n  if (soil_files) {\n    nr_soiltypes <- get.geotop.inpts.keyword.value(keyword=\"SoilLayerTypes\", wpath=wpath, numeric=TRUE)\n    soil_map <- get.geotop.inpts.keyword.value(keyword = \"SoilMapFile\", raster = T, wpath=wpath, isNA = -9999)\n    soil_map@data@values[soil_map@data@values==-9999] <- NA\n    soil_type_summary <- summary(as.factor(soil_map@data@values))\n    soil_type_ratio   <- soil_type_summary[!names(soil_type_summary)==\"NA's\"] / sum(soil_type_summary[!names(soil_type_summary)==\"NA's\"])\n    \n    soil_input <- get.geotop.inpts.keyword.value(keyword=\"SoilParFile\", wpath=wpath, data.frame=TRUE, \n                                                 level = 1:nr_soiltypes)\n    \n    soil_thickness_header <- get.geotop.inpts.keyword.value(keyword=\"HeaderSoilDz\", wpath=wpath)\n    soil_saturation_header <- get.geotop.inpts.keyword.value(keyword=\"HeaderThetaSat\", wpath=wpath)\n    \n    if (is.list(soil_input)) {\n      soil_thickness <- soil_input[[1]][,soil_thickness_header]\n      \n      saturation_ratio_mat <- c()\n      for (i in names(soil_type_ratio))\n      {\n        saturation_ratio_mat <- cbind(saturation_ratio_mat, soil_input[[as.integer(i)]][,soil_saturation_header] * soil_type_ratio[i]) \n      }\n      soil_saturation <- rowSums(saturation_ratio_mat)\n    } else {\n      soil_thickness <- soil_input[,soil_thickness_header]\n      soil_saturation <- soil_input[,soil_saturation_header]\n    }\n    \n  } else {\n    soil_saturation <- get.geotop.inpts.keyword.value(keyword=\"ThetaSat\", wpath=wpath, numeric=T)\n    soil_thickness <- get.geotop.inpts.keyword.value(\"SoilLayerThicknesses\", numeric = T, wpath=wpath)\n  }\n  \n  nlayers <- length(soil_thickness)\n  \n  name_maps <- get.geotop.inpts.keyword.value(keyword = mapkey, wpath=wpath)\n  \n  dir.create(file.path(wpath,\"gif\"))\n  dir.create(file.path(wpath,\"pdf\"))\n  \n  if (is.null(layers)) {\n    pointerMAPS <- pointer.to.maps.xyz.time(wpath, map.prefix = name_maps, \n                                            suffix = \"N%04d.asc\", \n                                            zoo.index = NULL, ntime=1,\n                                            nlayers=length(dates))\n    \n    print(\"create maps in pdf format for each time step\")\n    for (d in 1:length(dates))\n    {\n      p <- GEOtop_ReadPlotRst(map = pointerMAPS[[d]], date = dates[d], variable = variable, layer = layers, \n                              limits = limits, legend = legend, lowcol = lowcol, highcol = highcol)\n      ggsave(filename = file.path(wpath,paste(\"pdf/\",variable,\"_D\",dates[d],\".pdf\",sep=\"\")), plot = p)\n    }\n    \n    setwd(file.path(wpath,\"pdf\"))\n    file.remove(\"Rplot.pdf\")\n    \n    # for linux system\n    # for linux system\n    print(\"image processing with ImageMagick\")\n    if (is.null(delay_value)) {\n      system(paste(\"convert -loop 1 *.pdf \", file.path(wpath, paste(\"gif/\", variable,\".gif\",sep=\"\"))) )\n    } else {\n      system(paste(\"convert -loop 1 -delay \", delay_value, \" *.pdf \", file.path(wpath, paste(\"gif/\", variable,\".gif\",sep=\"\"))) )\n    }\n\n    file.remove(dir())\n\n  } else {\n    pointerMAPS <- pointer.to.maps.xyz.time(wpath, map.prefix = name_maps, \n                                            suffix = \"L%04dN%04d.asc\", \n                                            zoo.index = NULL, ntime=length(dates), \n                                            nlayers=nlayers)\n    \n    for (i in layers)\n    {\n      print(paste(\"create maps in pdf format for each time step, layer \", i, sep=\"\"))\n      for (d in 1:length(dates))\n      {\n        p <- GEOtop_ReadPlotRst(map = pointerMAPS[[i]][d], date = dates[d], variable = variable, layer = i, \n                                limits = limits, legend = legend, lowcol = lowcol, highcol = highcol)\n        ggsave(filename = file.path(wpath,paste(\"pdf/\",variable,\"_L\",i,\"_D\",dates[d],\".pdf\",sep=\"\")), plot = p)\n      }\n      \n      setwd(file.path(wpath,\"pdf\"))\n      file.remove(\"Rplots.pdf\")\n      \n      # for linux system\n      print(\"image precessing with ImageMagick\")\n      if (is.null(delay_value)) {\n        system(paste(\"convert -loop 1 *.pdf \", file.path(wpath, paste(\"gif/\", variable,\"_L\",i,\".gif\",sep=\"\"))) )\n      } else {\n        system(paste(\"convert -loop 1 -delay \", delay_value, \" *.pdf \", file.path(wpath, paste(\"gif/\", variable,\"_L\",i,\".gif\",sep=\"\"))) )\n      }\n     \n      file.remove(dir())\n    }\n  }\n\n}\n",
    "created" : 1427123304821.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3655537562",
    "id" : "D0FFD305",
    "lastKnownWriteTime" : 1427294930,
    "path" : "~/GitHub/AnalyseGEOtop/R/GEOtop_AnimateMaps.R",
    "project_path" : "R/GEOtop_AnimateMaps.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}