{
    "contents" : "# Read GEOtop model point output (multiple points)\n# --> slow / increase!\n# it is only necessary to read point output data once!\n\n# ARGUMENTS\n# path        path to simulation\n# model_run   simulation folder\n# station     output station names (Mazia)\n# val_aggr    time aggregation \n# lc_classes  names of landcover classes in simulation\n# soil_files\n\nGEOtop_Read_multipoint <- function(path, model_run, stations, val_aggr, soil_files, lc_classes)\n{\n  # load libraries\n#   require(zoo)\n#   require(geotopbricks)\n#   require(hydroGOF)\n#   require(hydroTSM)\n#   require(ggplot2)\n#   require(soilwater)\n  \n  #  source functions 1\n  #  source(\"H:/Projekte/HydroAlp/06_Workspace/BrJ/03_R/GEOtopAnalyse/FUN_GEOtopReadPoint.R\")\n  \n  # created path to model output  \n   wpath <- paste(path, model_run, sep=\"\")  \n  \n  #---------------------------------------------------------------------------------------------\n  \n  #   #---- GEOtop .inpts  \n  fc_classes <- get.geotop.inpts.keyword.value(wpath=wpath, keyword = \"CanopyFraction\", numeric = T)\n  #   \n  #   # BUG only works with less than 10 output points\n  # try\n  #point_character <- GEOtop_ReadPointVar(wpath = wpath, coordinates_value_df = TRUE, landcover_classes = lc_classes)  \n  \n  # get landcover class (either listpoint file or from point info)\n  lc <- read.table(paste(wpath,\"/listpoints.txt\", sep=\"\"), header=T, sep=\",\")$landcover  \n  \n  fc <- c()\n  for (i in 1:length(lc)) fc[i] <- fc_classes[lc[i]]\n  names(fc) <- stations\n  \n    # reading data  \n    print(\"start reading point output data for the stations\")\n    print(stations)\n    \n    #---- METEOROLOGICAL VARIABLES    \n    print(\"-----METEOROLOGICAL VARIABLEs-----\")\n    # precipitation\n    print(\"... precipitation = snow + rain (over canopy)\") \n    snow_o_canopy <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                                     varOFint=c(\"Psnow_over_canopy.mm.\"))\n    rain_o_canopy <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                     varOFint=c(\"Prain_over_canopy.mm.\"))\n    precipitation <- zoo(x=coredata(snow_o_canopy) + coredata(rain_o_canopy), order.by=time(snow_o_canopy))\n    \n    #----\n    # wind speed\n    print(\"... wind speed\")\n    wind_speed <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                                  varOFint=c(\"Wind_speed.m.s.\"))\n    #----\n    # relative humidity\n    print(\"... relative humidity\")\n    relative_humidity <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                                         varOFint=c(\"Relative_Humidity...\"))\n    #----\n    # atmospheric pressure\n    print(\"... atmospheric pressure\")\n    atm_pressure <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                                    varOFint=c(\"Pressure.mbar.\"))\n    #----  \n    # air temperature\n    print(\"... air temperature\")\n    airT <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                            varOFint=c(\"Tair.C.\"))\n    \n    #---- \n    # energy fluxes\n    print(\"-----ENERGY FLUXES-----\")\n    \n    print(\"... radiation components: short & long wave\")\n    #short wave\n    SWin <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                            varOFint=c(\"SWin.W.m2.\"))\n    SWup <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                            varOFint=c(\"SWup.W.m2.\"))\n    SWv <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                           varOFint=c(\"SWv.W.m2.\"))\n    SWbeam <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                              varOFint=c(\"SWbeam.W.m2.\"))\n    SWdiff <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                              varOFint=c(\"SWdiff.W.m2.\"))\n    SWnet <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                             varOFint=c(\"SWnet.W.m2.\"))\n    \n    #long wave\n    LWin <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                            varOFint=c(\"LWin.W.m2.\"))\n    LWup <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                            varOFint=c(\"LWup.W.m2.\"))\n    LWv <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                           varOFint=c(\"LWv.W.m2.\"))\n    LWnet <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                             varOFint=c(\"LWnet.W.m2.\"))\n    \n    #soil heat fluxes\n    print(\"... surface energy balance\")\n    SurfEB <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                              varOFint=c(\"Surface_Energy_balance.W.m2.\"))\n    SoilHeat <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                varOFint=c(\"Soil_heat_flux.W.m2.\"))\n    \n    # latent heat LE\n    print(\"... latent heat components\")\n    LEv <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                           varOFint=c(\"LEv.W.m2.\"))\n    LEg_veg   <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                 varOFint=c(\"LEg_veg.W.m2.\"))\n    LEg_unveg <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                 varOFint=c(\"LEg_unveg.W.m2.\"))\n    \n    LE_soil <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                               varOFint=c(\"LE.W.m2.\"))\n    \n    # sensible heat H\n    print(\"... sensible heat\")\n    Hv <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                          varOFint=c(\"Hv.W.m2.\"))\n    Hg_veg   <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                varOFint=c(\"Hg_veg.W.m2.\"))\n    Hg_unveg <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                varOFint=c(\"Hg_unveg.W.m2.\"))\n    \n    H_soil  <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                               varOFint=c(\"H.W.m2.\"))  \n    \n    #---- WATER FLUXES\n    # evapotranspiration\n    print(\"-----WATER FLUXES-----\")\n    print(\"... evapotranspiration = evapo_surface + transpiration_canopy\")\n    evapo_surfac <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\", \n                                    varOFint=c(\"Evap_surface.mm.\"))\n    trans_canopy <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"PointOutputFile\",\n                                    varOFint=c(\"Trasp_canopy.mm.\"))  \n    evapotranspiration <- evapo_surfac + trans_canopy\n    \n    #---- WATER STORAGE \n    print(\"-----WATER STORAGE-----\")\n    \n    # soil water storage\n    # theta liquid/ice content\n    \n    if (soil_files) {\n      soil_input <- get.geotop.inpts.keyword.value(keyword=\"SoilParFile\", wpath=wpath, data.frame=TRUE)\n      soil_thickness <- soil_input[,1]\n    } else {\n      soil_thickness <- get.geotop.inpts.keyword.value(\"SoilLayerThicknesses\", numeric = T, wpath=wpath)\n    }\n    \n    # output depth in mm\n    soil_head <- diff(c(0,cumsum(soil_thickness)))/2 + c(0,cumsum(soil_thickness))[-length(soil_thickness)-1]\n    \n    soil_header <- c()\n    for (i in 1:length(soil_head))\n    {\n      if (ceiling(soil_head[i])==soil_head[i]) {\n        soil_header[i] <- paste(\"X\", soil_head[i], \".000000\", sep=\"\")\n      } else {\n        soil_header[i] <- paste(\"X\", soil_head[i], \"00000\", sep=\"\")  }     \n    } \n    \n    print(\"... soil liquid content for all layers\")\n    soil_liq <- list()\n    for (i in soil_header)\n      soil_liq[[i]] <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"SoilLiqContentProfileFile\", \n                                       varOFint=c(i))\n    \n    #time_soil <- time(soil_liq[[1]])\n    #dummy <- matrix(unlist(soil_liq), nrow=length(time_soil))\n    \n    #coln <- c()\n    #for (i in soil_header) coln <- c(coln,paste(i,1:dim(soil_liq[[1]])[[2]],sep=\"_\"))\n    #colnames(dummy) <- coln\n    \n    #soil_liqu <- zoo(dummy, time_soil)\n    \n    print(\"... soil ice content for all layers\")\n    soil_ice <- list()\n    for (i in soil_header) \n      soil_ice[[i]] <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"SoilIceContentProfileFile\", \n                                       varOFint=c(i))\n    \n    #time_soil <- time(soil_ice[[1]])\n    #dummy <- matrix(unlist(soil_ice), nrow=length(time_soil))\n    \n    #coln <- c()\n    #for (i in soil_header) coln <- c(coln,paste(i,1:dim(soil_ice[[1]])[[2]],sep=\"_\"))\n    #colnames(dummy) <- coln\n    \n    #soil_ice <- zoo(dummy, time_soil)\n    \n    soil_moist <- list()\n    for (i in soil_header) soil_moist[[i]] <- soil_liq[[i]] + soil_ice[[i]]\n    #   \n    #   #----\n    #   # psi\n    #   print(\"... soil liquid water pressure for all layers\")\n    #   soil_liq_pressure <- list()\n    #   for (i in soil_header)\n    #     soil_liq_pressure[[i]] <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"SoilLiqWaterPressProfileFile\", \n    #                                               varOFint=c(i))\n    \n    #-----\n    # SOIL TEMPERATURE\n    print(\"... soil temperature for all layers\")\n    soil_temp <- list()\n    for (i in soil_header)\n      soil_temp[[i]] <- GEOtop_ReadPointVar(wpath=wpath, keyword=\"SoilAveragedTempProfileFile\", \n                                        varOFint=c(i))\n    \n    # all data in a list\n    data_list <- list(snow_o_canopy=snow_o_canopy, rain_o_canopy=rain_o_canopy, P=precipitation,\n                      airT=airT, WV=wind_speed, RH=relative_humidity, \n                      atmP=atm_pressure, SWin=SWin, LWin=LWin, SWnet=SWnet, LWnet=LWnet, LWin=LWin,\n                      SWbeam=SWbeam, SWdiff=SWdiff, SWup=SWup, LWup=LWup,\n                      LE_soil=LE_soil, H_soil=H_soil, SurfEB = SurfEB, SoilHeat = SoilHeat,\n                      Hv=Hv, LEv=LEv, Hg_veg=Hg_veg, LEg_veg=LEg_veg, Hg_unveg=Hg_unveg, LEg_unveg=LEg_unveg,\n                      ET=evapotranspiration, evapo_surfac=evapo_surfac, trans_canopy=trans_canopy)\n    \n    for (i in 1:length(soil_header)) \n    {\n      data_list[[paste(\"soil_ice\",soil_head[i],sep=\"_\")]] <- soil_ice[[i]]\n      data_list[[paste(\"soil_liq\",soil_head[i],sep=\"_\")]] <- soil_liq[[i]]\n      data_list[[paste(\"SWC\",soil_head[i],sep=\"_\")]] <- soil_moist[[i]]\n      #data_list[[paste(\"PSI\",soil_head[i],sep=\"_\")]] <- soil_liq_pressure[[i]]\n      data_list[[paste(\"soil_temp\",soil_head[i],sep=\"_\")]] <- soil_temp[[i]]\n    }\n    \n    #     #----\n    #     # soil parametrisation | texture | suction curves\n    #     if (soil_files) {\n    #       nr_soiltypes <- get.geotop.inpts.keyword.value(keyword = \"SoilLayerTypes\", wpath=wpath, numeric = T)\n    #       soil_para <- get.geotop.inpts.keyword.value(keyword = \"SoilParFile\", wpath = wpath)\n    #       \n    #       soilfiles <- paste(soil_para, formatC(1:nr_soiltypes, width = 4, format = \"d\", flag = \"0\"), \".txt\", sep=\"\")\n    #       \n    #       soil_parameters <- list()\n    #       for (sfile in soilfiles)\n    #       {\n    #         soil_parameters[[sfile]] <- read.csv(file.path(wpath,sfile), header = T)\n    #       }\n    #     } else {\n    #       \n    #     }\n    \n    \n    #----\n    # merge data for each station\n    \n    #----\n    # station \n    list_station <- list()\n    for (i in 1:length(stations))\n    {\n      list_station[[stations[i]]] <- lapply( X = data_list, FUN = function(x) x[,i] )\n    }\n    \n    # read info for SWC input (measured data)\n    #SWCinfo <- read.csv(file = \"H:/Projekte/HydroAlp/06_Workspace/BrJ/03_R/GEOtopAnalyse/SWCinfo.txt\")\n    SWCinfo <- read.csv2(file = \"validation_data/SWCinfo.txt\")\n  \n    # save workspace\n    save(list = c(\"list_station\",\"SWCinfo\",\"soil_head\",\"soil_header\",\"wpath\",\"fc\"), \n         file = paste(wpath,\"/point.RData\",sep=\"\"))\n  \n  return(list_station)\n}",
    "created" : 1428942925590.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1015740733",
    "id" : "44CEDC3A",
    "lastKnownWriteTime" : 1429002952,
    "path" : "~/GitHub/AnalyseGEOtop/R/GEOtop_ReadMultiPoint.R",
    "project_path" : "R/GEOtop_ReadMultiPoint.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}