par(new=TRUE)
plot(psi, swc[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_swc[i], lwd=2,
ylim=c(0,60), xlim=c(1,10000000) )
}
par(new=TRUE)
plot(psi, khy[[1]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[1], lwd=2,
xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, khy[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[i], lwd=2,
xlim=c(1,10000000) )
}
axis(4, col="grey", col.ticks = "grey", col.axis="grey")
legend("topright",legend = c("Soil Water Content  [volume %]","Hydraulic Conductivity [mm/s]"),col=c("black","grey"),
lwd=3,bty="n", text.col = c("black","grey"))
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
grid(NULL, NULL, lwd=1.2)
plot(psi, swc[[1]], type="l", xlab="pF", ylab="", log="x", xaxt="n", bty="n",
#           main=paste(main, " | alpha=", alpha, ", n=", n, sep=""),
lwd=2, col=colors_swc[1],
ylim=c(0,60), xlim=c(1,10000000) )
x11()
plot(psi, swc[[1]], type="l", xlab="pF", ylab="", log="x", xaxt="n", bty="n",
#           main=paste(main, " | alpha=", alpha, ", n=", n, sep=""),
lwd=2, col=colors_swc[1],
ylim=c(0,60), xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, swc[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_swc[i], lwd=2,
ylim=c(0,60), xlim=c(1,10000000) )
}
par(new=TRUE)
plot(psi, khy[[1]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[1], lwd=2,
xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, khy[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[i], lwd=2,
xlim=c(1,10000000) )
}
axis(4, col="grey", col.ticks = "grey", col.axis="grey")
legend("topright",legend = c("Soil Water Content  [volume %]","Hydraulic Conductivity [mm/s]"),col=c("black","grey"),
lwd=3,bty="n", text.col = c("black","grey"))
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
grid(NULL, NULL, lwd=1.2)
grid(ny =  NULL, lwd=1.2)
plot(psi, swc[[1]], type="l", xlab="pF", ylab="", log="x", xaxt="n", bty="n",
#           main=paste(main, " | alpha=", alpha, ", n=", n, sep=""),
lwd=2, col=colors_swc[1],
ylim=c(0,60), xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, swc[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_swc[i], lwd=2,
ylim=c(0,60), xlim=c(1,10000000) )
}
par(new=TRUE)
plot(psi, khy[[1]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[1], lwd=2,
xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, khy[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[i], lwd=2,
xlim=c(1,10000000) )
}
axis(4, col="grey", col.ticks = "grey", col.axis="grey")
legend("topright",legend = c("Soil Water Content  [volume %]","Hydraulic Conductivity [mm/s]"),col=c("black","grey"),
lwd=3,bty="n", text.col = c("black","grey"))
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
grid(ny =  NULL, lwd=1.2)
?grid
grid(ny =  NULL, nx = NA, lwd=1.2 ,col="black")
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, accurate = 10, ksat = ksat)
GEOtop_VisSoilWaterRet(alpha = alpha[1],n = n[1],theta_sat = theta_sat[1],theta_res = theta_res[1], theta_pwp = theta_pwp[1], theta_fc = theta_fc[1], pdf = F, accurate = 10, ksat = ksat[1])
legend("topright",legend = c("Soil Water Content  [volume %]","Hydraulic Conductivity [mm/s]"),col=c("black","grey"),
lwd=3,bty="n", text.col = c("black","grey"), horiz=T)
legend("topright", inset = .3, legend = paste("alpha=", alpha, ", n=", n, ", Ksat=", ksat, sep=""), lwd=2, col=colors_swc)
n=seq(1.1,1.5,.1)
legend("topright", inset = .1, legend = paste("alpha=", alpha, ", n=", n, ", Ksat=", ksat, sep=""), lwd=2, col=colors_swc)
x11()
plot(psi, swc[[1]], type="l", xlab="pF", ylab="", log="x", xaxt="n", bty="n",
#           main=paste(main, " | alpha=", alpha, ", n=", n, sep=""),
lwd=2, col=colors_swc[1],
ylim=c(0,60), xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, swc[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_swc[i], lwd=2,
ylim=c(0,60), xlim=c(1,10000000) )
}
par(new=TRUE)
plot(psi, khy[[1]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[1], lwd=2,
xlim=c(1,10000000) )
for (i in 2:length(alpha)-1)
{
par(new=TRUE)
plot(psi, khy[[i]], type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
main="", col=colors_khy[i], lwd=2,
xlim=c(1,10000000) )
}
axis(4, col="grey", col.ticks = "grey", col.axis="grey")
legend("topright",legend = c("Soil Water Content  [volume %]","Hydraulic Conductivity [mm/s]"),col=c("black","grey"),
lwd=3,bty="n", text.col = c("black","grey"), horiz=T)
legend("topright", inset = .05, legend = paste("alpha=", alpha, ", n=", n, ", Ksat=", ksat, sep=""), lwd=2, col=colors_swc, bty="n")
swc_clay <- swc(psi = -psi, alpha = 0.015, n = 1.25, theta_sat = .459, theta_res = .098) *100
swc_loam <- swc(psi = -psi, alpha = 0.011, n = 1.47, theta_sat = .399, theta_res = .061) *100
swc_sand <- swc(psi = -psi, alpha = 0.035, n = 3.17, theta_sat = .375, theta_res = .029) *100
par(new=TRUE)
plot(psi, swc_clay, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_loam, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
par(new=TRUE)
plot(psi, swc_sand, type="l", xlab="", ylab="", log="x", xaxt="n", yaxt="n", bty="n",
col =  grey.colors(n = 1, start = .1, end = .3, alpha = .6), lty="dashed", lwd=1.2,
ylim=c(0,60), xlim=c(1,10000000) )
text(x = 1 , y = c(45.9,39.9,37.5)+.75, labels = c("clay","loam","sand"),
col=grey.colors(n = 1, start = .1, end = .3, alpha = .6))
ticks <- c(0,1,2,3,4,5,7)
labels <- sapply(ticks, function(i) as.expression(i))
axis(1, at=c(1, 10, 100, 1000, 10000, 100000, 10000000), labels=labels)
abline(v=c(10^1.8,10^2.5,10^4.2), lty="dashed", col=grey.colors(n = 1, .8, .8, .5))
grid(ny =  NULL, nx = NA, lwd=1.2)
text(x = c(10^1.8,10^2.5,10^4.2), y=-1, labels = c("1.8","2.5","4.2"), col="grey30")
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, accurate = 10, ksat = ksat)
x11()
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, accurate = 10, ksat = ksat)
GEOtop_VisSoilWaterRet(alpha = alpha[1],n = n[1],theta_sat = theta_sat[1],theta_res = theta_res[1], theta_pwp = theta_pwp[1], theta_fc = theta_fc[1], pdf = F, accurate = 10, ksat = ksat[1])
x11()
GEOtop_VisSoilWaterRet(alpha = alpha[1],n = n[1],theta_sat = theta_sat[1],theta_res = theta_res[1], theta_pwp = theta_pwp[1], theta_fc = theta_fc[1], pdf = F, accurate = 10, ksat = ksat[1])
GEOtop_VisSoilWaterRet(alpha = alpha[1],n = n[1],theta_sat = theta_sat[1],theta_res = theta_res[1], theta_pwp = theta_pwp[1], theta_fc = theta_fc[1], pdf = T, accurate = 10, ksat = ksat[1])
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = T, accurate = 10, ksat = ksat)
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = T, accurate = 10, ksat = ksat)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, png = T, accurate = 10, ksat = ksat)
dev.off()
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, png = T, accurate = 1, ksat = ksat)
dev.off()
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
alpha
names(alpha)
names(alpha) <- paste(sim, 1:5)
names(alpha) <- paste("sim", 1:5)
names(alpha)
source('~/GitHub/AnalyseGEOtop/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha,n = n,theta_sat = theta_sat,theta_res = theta_res, theta_pwp = theta_pwp, theta_fc = theta_fc, pdf = F, png = T, accurate = 1, ksat = ksat)
read.csv(file = "/home/jbr/Schreibtisch/cal_out/info.csv")
cal_result <- read.csv(file = "/home/jbr/Schreibtisch/cal_out/info.csv")
cal_result <- read.csv(file = "/home/jbr/Schreibtisch/cal_out/info.csv")
cal_result
cal_result_5 <- subset(x = cal_result, subset = cal_result$depth==5)
head(cal_result_5)
str(cal_result_5)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
alpha <- cal_result_5$alpha
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed)
str(alpha)
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed, cal_result_5$KGE)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$n, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1)
ls
ls()
cal_result <- read.csv(file = "/home/jbr/Schreibtisch/cal_out/info.csv")
cal_result_5 <- subset(x = cal_result, subset = cal_result$depth==5)
alpha <- cal_result_5$alpha
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed, cal_result_5$KGE)
alpha
length(alpha)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$n, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1)
alpha <- cal_result_5$alpha
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed, cal_result_5$KGE)
n = cal_result_5$n
theta_sat = cal_result_5$theta_sat_toplayer
theta_res = cal_result_5$theta_res_toplayer
ksat = cal_result_5$ksat_toplayer
theta_pwp = .13
theta_fc = .30
alpha <- cal_result_5$alpha
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed, cal_result_5$KGE)
n = cal_result_5$n
theta_sat = cal_result_5$theta_sat_toplayer
theta_res = cal_result_5$theta_res_toplayer
ksat = cal_result_5$ksat_toplayer
theta_pwp = .13
theta_fc = .30
colors_khy <- grey.colors(n = length(alpha), start = .7, end = .9, alpha = .5)
colors_swc <- grey.colors(n = length(alpha), start = 0, end = .2, alpha = .5)
colors_khy
psi <- seq(1,10000000,accurate)
accurate
swc <- list()
khy <- list()
for (i in 1:length(alpha)) {
swc[[i]] <- swc(psi = -psi, alpha = alpha[i], n = n[i], theta_sat = theta_sat[i], theta_res = theta_res[i]) *100
khy[[i]] <- khy(psi = -psi, v = 0.5, ksat = ksat[i], alpha = alpha[i], n = n[i], theta_sat = theta_sat[i], theta_res = theta_res[i])
}
op <- par(las=1, pty="s", mar=c(5,4,4,5)+.1)
x11()
plot(psi, swc[[1]], type="l", xlab="pF", ylab="", log="x", xaxt="n", bty="n",
#           main=paste(main, " | alpha=", alpha, ", n=", n, sep=""),
lwd=2, col=colors_swc[1],
ylim=c(0,60), xlim=c(1,10000000) )
str(swc)
library(soilwater)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$n, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1)
psi <- seq(1,10000000,accurate)
swc <- list()
khy <- list()
for (i in 1:length(alpha)) {
swc[[i]] <- swc(psi = -psi, alpha = alpha[i], n = n[i], theta_sat = theta_sat[i], theta_res = theta_res[i]) *100
khy[[i]] <- khy(psi = -psi, v = 0.5, ksat = ksat[i], alpha = alpha[i], n = n[i], theta_sat = theta_sat[i], theta_res = theta_res[i])
}
str(swc)
?swc
str(psi)
length(alpha)
1:length(alpha)
i
length(n)
cal_result_5$n
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1)
names(alpha)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
seq(.2,.9,.15)
seq(.2,.8,.1)
seq(.2,.7,.1)
seq(.7,.2,.1))
seq(.7,.2,.1)
seq(.7,.2,.1)
seq(.2,.7,.1)
order(seq(.2,.7,.1))
order(seq(.2,.7,.1), decreasing = T)
seq(.2,.7,.1)
c(rgb(1,0,0,seq(.2,.7,.1), rgb(0,0,1,seq(.2,.7,.1)))
)
colors=c(rgb(1,0,0,seq(.2,.7,.1), rgb(0,0,1,seq(.2,.7,.1))))
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
colors=c(rgb(1,0,0,seq(.2,.7,.1), rgb(0,0,1,seq(.2,.7,.1))))
colors
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors)
rgb(1,0,0,seq(.2,.7,.1)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
rgb(1,0,0,seq(.2,.7,.1))
rgb(0,0,1,seq(.2,.7,.1)))
rgb(0,0,1,seq(.2,.7,.1))
colors=c(rgb(1,0,0,seq(.2,.7,.1)), rgb(0,0,1,seq(.2,.7,.1)))
colors
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors)
colors=c(rgb(1,0,0,seq(.2,.7,.1)), rgb(0,1,0,seq(.2,.7,.1)))
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors, plot_khy = F)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors, plot_khy = F)
alpha <- cal_result_5$alpha
names(alpha) <- paste(cal_result_5$station,cal_result_5$observed)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors, plot_khy = F)
source('~/GitHub/AnalyseGEOtop/R/GEOtop_VisSoilWaterRet.R', echo=TRUE)
GEOtop_VisSoilWaterRet(alpha = alpha, n = cal_result_5$N, theta_sat = cal_result_5$theta_sat_toplayer,
theta_res = cal_result_5$theta_res_toplayer, ksat = cal_result_5$ksat_toplayer,
theta_pwp = .13, theta_fc = .30, accurate = 1, colors=colors, plot_khy = F)
library("AnalyseGeotop", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = F, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007")
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = F, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007",linux = T)
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = F, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007",linux = T, use_swc_liq = T)
load("/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/Montecini_pnt_1_225_B2_007/point.RData")
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = T, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007",linux = T, use_swc_liq = T)
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = T, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007",linux = T, use_swc_liq = T, soil_files = T)
detach("package:AnalyseGeotop", unload=TRUE)
remove.packages("AnalyseGeotop", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
install_github("JBrenn/AnalyseGeotop")
library(AnalyseGeotop)
GEOtop_multiplePointPlot_Montecini(path = "/run/user/1000/gvfs/smb-share:server=sdcalp01.eurac.edu,share=data2/Simulations/Simulation_GEOtop_1_225_ZH/Vinschgau/SimTraining/BrJ/HiResAlp/1D/", stations = "B2", read_data = T, calibrate = F, val_aggr = "h",model_run = "Montecini_pnt_1_225_B2_007",linux = T, use_swc_liq = T, soil_files = T)
a <- "SWnet.W.m2.+LWnet.W.m2."
a
strsplit(a,"+")
a <- "SWnet.W.m2.|LWnet.W.m2."
a
strsplit(a,"|")
strsplit(a,"_")
a<-"SWnet.W.m2.%LWnet.W.m2."
strsplit(a,"%")
lookup_tbl_observation <- read.table(file = "data/tbl_observations",sep=",",header=T)
lookup_tbl_observation <- read.table(file = "data/tbl_observations",sep=",",header=T)
lookup_tbl_observation <- read.table(file = "data/tbl_observations",sep=",",header=T)
View(lookup_tbl_observation)
lookup_tbl_observation <- read.table(file = "data/tbl_observations",sep=",",header=T)
View(lookup_tbl_observation)
rm(a)
save(list = "lookup_tbl_observations", file = "data/lookup_tbl_observation.RData")
save(list = "lookup_tbl_observation", file = "data/lookup_tbl_observation.RData")
lookup_tbl_observation <- read.table(file = "data/tbl_observations",sep=",",header=T)
save(list = "lookup_tbl_observations", file = "data/lookup_tbl_observation.RData")
save(list = "lookup_tbl_observation", file = "data/lookup_tbl_observation.RData")
library(AnalyseGeotop)
remove.packages("AnalyseGeotop", lib="~/R/x86_64-pc-linux-gnu-library/3.2")
library(devtools)
install_github("JBrenn/AnalyseGeotop")
library(AnalyseGeotop)
data("lookup_tbl_observation")
View(lookup_tbl_observation)
library(DataBaseAlpEnvEURAC)
B2_meteo <- getMETEO(data=B2,
cols=c("Rain","WindSpeed","WindDirection","RH","Temp","SolarRadiation","SnowDepth"),
pdf.name="B2_meteo.pdf", mkreg=TRUE, plot=F)
meteoB2 <- dB_getMETEO(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2/", header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt", station = "B2")
data()
data(calibration)
View(calibration)
data()
data("validation")
library(SoilMoisturePattern)
data()
data(observed_mrd)
str(B2)
data(B2)
data(observed_mrd)
str(meteoB2)
as.chron(index(B2))
chron(index(B2))
library(chron)
chron(index(B2))
library(zoo)
chron(index(B2))
as.chron(index(B2))
str(B2)
smcB2 <- zoo(coredataB2, as.POSIXlt(index(B2)))
smcB2 <- zoo(coredataB2, as.POSIXct(index(B2)))
smcB2 <- zoo(coredataB2, as.POSIXct(times(B2)))
smcB2 <- zoo(coredataB2, as.POSIXlt(times(B2)))
times(B2)[1]
time(B2)[1]
index(B2)[1]
index(B2)
str(B2)
smcB2_050 <- zoo(coredata(B2$z0005), as.POSIXlt(times(B2$z0005)))
str(meteoB2)
chron(times(meteoB2))
summary(meteoB2)
summary(chron(times(meteoB2)))
chron(as.numeric(times(meteoB2)))
as.numeric(times(meteoB2))
str(meteoB2)
as.POSIXlt(times(meteoB2))
as.POSIXlt(as.numeric(times(meteoB2)))
as.POSIXlt(as.numeric(times(meteoB2)), origin = "01-01-1970")
as.POSIXlt("01-01-1970")
as.POSIXlt("01/01/1970")
as.POSIXlt("01/01/70")
as.POSIXlt(as.Date("01/01/1970"))
as.POSIXlt(as.Date("01-01-1970"))
as.Date("01-01-1970")
as.POSIXlt(as.numeric(times(meteoB2)), origin = as.POSIXlt(as.Date("01-01-1970", format="%d-%m-%Y")))
as.POSIXlt(times(meteoB2), origin = as.POSIXlt(as.Date("01-01-1970", format="%d-%m-%Y")))
as.POSIXct(times(meteoB2), origin = as.POSIXlt(as.Date("01-01-1970", format="%d-%m-%Y")))
times(meteoB2)
str(meteoB2)
tail(meteoB2)
times(meteoB2)[1]
time(meteoB2)[1]
as.POSIXct(time(meteoB2)[1])
as.POSIXlt(time(meteoB2)[1])
?timezone
Sys.timezone()
as.POSIXlt(time(meteoB2)[1], tz="GMT")
str(B2)
time(B2$z0005[1])
time(B2$z0005[2])
meteoB2 <- zoo(coredata(meteoB2), as.POSIXlt(time(meteoB2)[1], tz="GMT"))
dB_getSWC()
dB_getSWC
str(meteoB2)
?dB_getMETEO
library(DataBaseAlpEnvEURAC)
library(SoilMoisturePattern)
library(zoo)
library(chron)
meteoB2 <- dB_getMETEO(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2/", header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt", station = "B2", cols = c("Rain","WindSpeed","WindDirection","RH","Temp","SolarRadiation","NetRs","NetRl"))
meteoB2 <- dB_getMETEO(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2/", header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt", station = "B2", cols = c("Rain","WindSpeed","WindDirection","RH","Temp","SolarRadiation","NetRs","NetRl"))
str(meteoB2)
aggr_vec <- floor(as.numeric(time(meteoB2)) * 24)
meteoB2_h <- aggregate(x = meteoB2, by = aggr_vec, FUN = mean,
na.rm = F)
meteoB2_h <- zoo(x = coredata(meteoB2_h), order.by = chron(time(meteoB2)/24))
meteoB2_h <- zoo(x = coredata(meteoB2_h), order.by = chron(time(meteoB2_h)/24))
str(meteoB2_h)
str(meteoB2)
summary(meteoB2_h)
meteoB2_h <- zoo(coredata(meteoB2_h), as.POSIXlt(time(meteoB2_h), tz="GMT"))
data(observed_mrd)
SWP_B2 <- dB_getSWP(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2/", header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt", station = "B", station_nr = 2, aggregation = "h")
SoilT_B2 <- dB_getSoilTemp(path2files = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/B2/", header.file = "/run/user/1000/gvfs/smb-share:server=abz02fst.eurac.edu,share=alpenv/Projekte/HiResAlp/06_Workspace/BrJ/02_data/Station_data_Mazia/B/header_B2.txt", station = "B", station_nr = 2, aggregation = "h")
str(SoilT_B2)
plot(SoilT_B2)
B2 <- merge(meteoB2_h, B2)
B2 <- merge(meteoB2_h, B2$z0005, B2$z0020)
str(B2)
data()
data(validation)
View(EnergyFluxes_df)
EnergyFluxes <- zoo(x=EnergyFluxes_df[,c(2,3)],
order.by=as.POSIXlt(x=strptime(as.character(EnergyFluxes_df$Date_Time), format = "%d/%m/%Y %H:%M")))
str(EnergyFluxes)
View(EnergyFluxes_df)
EnergyFluxes <- zoo(x=EnergyFluxes_df[,c(2,3)],
order.by=as.POSIXlt(x=strptime(as.character(EnergyFluxes_df$Date_Time), format = "%d/%m/%Y %H:%M"), tz = "GMT"))
EnergyFluxes_daily <- aggregate(x = EnergyFluxes, by = as.Date(time(EnergyFluxes)), FUN = mean, na.rm=TRUE)
View(ET_B2)
ET_B2 <- zoo(x=ET_B2$ET_mm_d, order.by=as.Date(x=ET_B2$date,format="%d.%m.%y"))
B2_d <- merge(EnergyFluxes_daily, ET_B2)
plot(B2_d)
